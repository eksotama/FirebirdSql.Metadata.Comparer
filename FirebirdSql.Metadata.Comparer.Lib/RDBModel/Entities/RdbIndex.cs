using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text;

namespace FirebirdSql.Metadata.Comparer.Lib.RDBModel.Entities
{
    /// <summary>
    /// RDB$INDICES stores definitions of both system- and user-defined indexes. The attributes of each column belonging to an index are stored in one row of the table RDB$INDEX_SEGMENTS.
    /// <see href="https://firebirdsql.org/file/documentation/reference_manuals/fblangref25-en/html/fblangref-appx04-indices.html"/>
    /// </summary>
    public class RdbIndex
    {
        /// <summary>
        /// The unique name of the index specified by the user or automatically generated by the system
        /// </summary>
        [Key, MaxLength(31)]
        public string IndexName { get; set; }

        /// <summary>
        /// The name of the table to which the index belongs. It corresponds to an identifier in RDB$RELATION_NAME.RDB$RELATIONS
        /// </summary>
        [MaxLength(31)]
        public string RelationName { get; set; }

        /// <summary>
        /// The internal (system) identifier of the index
        /// </summary>
        public short IndexId { get; set; }

        /// <summary>
        /// Specifies whether the index is unique:
        /// 1 - unique
        /// 0 - not unique
        /// </summary>
        public short UniqueFlag { get; set; }

        /// <summary>
        /// Could store comments concerning the index
        /// </summary>
        public string Description { get; set; }

        /// <summary>
        /// The number of segments (columns) in the index
        /// </summary>
        public short SegmentCount { get; set; }

        /// <summary>
        /// Indicates whether the index is currently active:
        /// 1 - inactive
        /// 0 - active
        /// </summary>
        public short IndexInactive { get; set; }

        /// <summary>
        /// Distinguishes between an expression index (1) and a regular index (0 or null). 
        /// Not used in databases created before Firebird 2.0; 
        /// hence, regular indexes in upgraded databases are more more likely to store null in this column
        /// </summary>
        public short? IndexType { get; set; }

        /// <summary>
        /// The name of the associated Foreign Key constraint, if any
        /// </summary>
        [MaxLength(31)]
        public string ForeignKey { get; set; }

        /// <summary>
        /// Indicates whether the index is system-defined or user-defined:
        /// 	1 or greater - system-defined
        /// 	0 - user-defined
        /// </summary>
        public short SystemFlag { get; set; }

        /// <summary>
        /// Expression for an expression index, written in the binary language representation (BLR), 
        /// used for calculating the values for the index at runtime.
        /// </summary>
        public byte[] ExpressionBlr { get; set; }

        /// <summary>
        /// The source code of the expression for an expression index
        /// </summary>
        public string ExpressionSource { get; set; }

        /// <summary>
        /// Stores the last known selectivity of the entire index, 
        /// calculated by execution of a SET STATISTICS statement over the index. 
        /// It is also recalculated whenever the database is first opened by the server. 
        /// The selectivity of each separate segment of the index is stored in RDB$INDEX_SEGMENTS.
        /// </summary>
        public double Statistics { get; set; }
    }
}
